# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4  

      # Install the dependecies
      - name: Install dependencies
        run: |
          sudo apt-get update -qq && \
          sudo apt-get install -qq -y curl gpg-agent && \
          sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list' && \
          curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - && \
          sudo apt-get update -qq && \
          sudo apt-get install -qq -y ros-melodic-desktop-full && \
          echo ". /opt/ros/melodic/setup.bash" >> ~/.bashrc && \
          sudo apt-get install -qq -y python-rosdep build-essential python3-catkin-tools && \
          sudo rosdep init && \
          rosdep update
          
      # Install gTest
      - name: Install gTest
        run: |
          sudo apt-get install -y libgtest-dev cmake
          mkdir -p $HOME/build
          cd $HOME/build
          sudo cmake /usr/src/googletest/googletest
          sudo make
          sudo cp lib/libgtest* /usr/lib/
          cd ..
          sudo rm -rf build
          sudo mkdir /usr/local/lib/googletest
          sudo ln -s /usr/lib/libgtest.a /usr/local/lib/googletest/libgtest.a
          sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/googletest/libgtest_main.a

      # Binary Cache Setup
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      # Set vcpkg binary sources to use GitHub Actions cache
      - name: Set vcpkg binary sources
        run: |
          echo "VCPKG_BINARY_SOURCES=clear;x-gha,readwrite" >> $GITHUB_ENV
          
      # Runs a set of commands to build the project
      - name: Build project
        run: |
          cmake --preset default
          cmake --build --preset default --config Debug --target install




